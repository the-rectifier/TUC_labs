#!/bin/bash
#iterate for every input file
#redirect error output to null
exec 2>/dev/null
for arg in "$@" 
do
    list_x=()
    list_y=()
    #READING AND PARSING THE LIST
    while IFS=':' read -r x y;
    do 
        list_x+=($x)
        list_y+=($y)
    done <$arg
    #echo ${list_x[@]}
    #echo ${list_y[@]}
    sum_x=0
    sum_x2=0
    for i in "${list_x[@]}"
    do
        sum_x=$(bc -l <<< "${sum_x} + $i")
        sum_x2=$(bc -l <<< "${sum_x2} + ($i^2)")
    done
    #echo "sum_x = " ${sum_x}
    #CALCULATING SUM_X
    sum_y=0
    for i in "${list_y[@]}"
    do
        sum_y=$(bc -l <<< "${sum_y} + $i")
    done
    #echo "sum_y = "${sum_y}
    #CALCULATING SUM_XY
    sum_xy=0
    for ((i=0;i<${#list_x[@]};++i)); 
    do
        sum_xy=$(bc -l <<< "${sum_xy} + (${list_x[$i]}*${list_y[$i]})")
    done
    #echo "sum_xy = " ${sum_xy}
    #CALCULATING CONSTANTS
    length=$(grep ^ -c $arg)
    #echo "length = " $length
    denom=$(bc -l <<< "(($length*${sum_x2})-(${sum_x})^2)")
    # -eq works only with integers... throws error >/dev/null
    if [ ${denom} -eq 0 ]
    then 
        echo "FILE: ${arg}, a=ND b=0 c=${list_x[0]} err=0"
        continue
    fi
    a=$(bc -l <<< "scale=2;(($length * ${sum_xy})-(${sum_x}*${sum_y}))/(($length*${sum_x2})-(${sum_x})^2)" | awk '{printf "%.2f", $0}')
    #echo $a
    b=$(bc -l <<< "scale=2;((${sum_y}-($a*${sum_x}))/$length)" | awk '{printf "%.2f", $0}')
    #echo $b
    err=0
    for ((i=0;i<${#list_x[@]};++i)); 
    do
        err=$(bc -l <<< "scale=2;(${list_y[$i]}-($a*${list_x[$i]}+$b))^2 +$err" | awk '{printf "%.2f", $0}')
    done
    #echo "err = " $err
    IFS=' '
    echo "FILE: ${arg}, a=$a b=$b c=1 err=$err" 
done
#restore stderr
exec 2>/dev/stderr